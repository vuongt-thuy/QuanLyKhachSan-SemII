/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.views;

import bkap.dao.impl.RoomDAO;
import bkap.model.Room;
import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.JPanel;

/**
 *
 * @author hongb
 */
public class ListRoomEmptyJDialog extends javax.swing.JDialog {

    private RoomDAO roomDao = new RoomDAO();
    private List<Room> listRoom;
    private List<Integer> listSelected;
    private int id;
    private Button b;
    boolean checkRemove = false;

    /**
     * Creates new form ListRoomEmptyJDialog
     */
    public ListRoomEmptyJDialog(java.awt.Frame parent, boolean modal, List<Integer> listS) {
        super(parent, modal);
        initComponents();
        this.listSelected = listS;
        listRoom = roomDao.findAll();
        pnlShowRoom.setLayout(new CardLayout());
        loadTable(pnlAll, listRoom);
    }

    private void loadTable(JPanel pnlShow, List<Room> listR) {

        pnlShow.removeAll();
        pnlShow.setLayout(new GridLayout(3, 5));
        pnlShowRoom.removeAll();
        for (Room data : listR) {
            b = new Button();
            b.setSize(90, 90);
            pnlShow.add(b);
            switch (data.getStatus()) {
                case 0:
                    b.setLabel("P " + data.getRoomId() + System.getProperty("line.separator") + " (Trống)");
                    b.setBackground(Color.decode("#80bfff"));
                    b.setEnabled(true);
                    b.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            if (listSelected != null) {
                                Boolean check = true;
                                for (int i = 0; i < listSelected.size(); i++) {
                                    if (data.getRoomId() == listSelected.get(i)) {
                                        listSelected.remove(listSelected.get(i));
                                        check = false;
                                        loadTable(pnlShow, listR);
                                    }
                                }
                                if (check == true) {
                                    listSelected.add(data.getRoomId());
                                }
                            } else {
                                listSelected.add(data.getRoomId());
                            }
                            checkRemove = true;
                            loadTable(pnlShow, listR);
                        }
                    });
                    for (Integer dataSelected : listSelected) {
                        if (dataSelected == data.getRoomId()) {
                            b.setBackground(Color.decode("#9999ff"));
                        }
                    }
                    break;
                case 1:
                    b.setLabel("P " + data.getRoomId() + " (Có khách)");
                    b.setBackground(Color.decode("#5ABD96"));
                    b.setEnabled(false);
                    break;
                case 2:
                    b.setLabel("P " + data.getRoomId() + " (Đang bảo dưỡng)");
                    b.setBackground(Color.gray);
                    b.setEnabled(false);
                    break;
                default:
                    break;
            }
        }
        pnlShowRoom.add(pnlShow);
        pnlShow.setVisible(true);
        pnlShow.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnGetAll = new javax.swing.JButton();
        btnGetSingle = new javax.swing.JButton();
        btnGetDouble = new javax.swing.JButton();
        pnlShowRoom = new javax.swing.JPanel();
        pnlSingle = new javax.swing.JPanel();
        pnlDouble = new javax.swing.JPanel();
        pnlAll = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        btnGetAll.setText("Tất cả");
        btnGetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetAllActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetAll);

        btnGetSingle.setText("Phòng đơn");
        btnGetSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetSingleActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetSingle);

        btnGetDouble.setText("Phòng đôi");
        btnGetDouble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDoubleActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetDouble);

        pnlShowRoom.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout pnlSingleLayout = new javax.swing.GroupLayout(pnlSingle);
        pnlSingle.setLayout(pnlSingleLayout);
        pnlSingleLayout.setHorizontalGroup(
            pnlSingleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        pnlSingleLayout.setVerticalGroup(
            pnlSingleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        pnlShowRoom.add(pnlSingle, "card2");

        javax.swing.GroupLayout pnlDoubleLayout = new javax.swing.GroupLayout(pnlDouble);
        pnlDouble.setLayout(pnlDoubleLayout);
        pnlDoubleLayout.setHorizontalGroup(
            pnlDoubleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        pnlDoubleLayout.setVerticalGroup(
            pnlDoubleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        pnlShowRoom.add(pnlDouble, "card3");

        javax.swing.GroupLayout pnlAllLayout = new javax.swing.GroupLayout(pnlAll);
        pnlAll.setLayout(pnlAllLayout);
        pnlAllLayout.setHorizontalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        pnlAllLayout.setVerticalGroup(
            pnlAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        pnlShowRoom.add(pnlAll, "card4");

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlShowRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlShowRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetAllActionPerformed
        // TODO add your handling code here:
        listRoom = roomDao.findAll();
        loadTable(pnlAll, listRoom);
    }//GEN-LAST:event_btnGetAllActionPerformed

    private void btnGetSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetSingleActionPerformed
        // TODO add your handling code here:
        listRoom = roomDao.findAll();
        List<Room> listSingle = new ArrayList<>();
        for (Room data : listRoom) {
            if (data.getTypeId() == 1) {
                listSingle.add(data);
            }
        }
        loadTable(pnlSingle, listSingle);
    }//GEN-LAST:event_btnGetSingleActionPerformed
    public List<Integer> getListRoomSelected() {
        return listSelected;
    }
    private void btnGetDoubleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDoubleActionPerformed
        // TODO add your handling code here:
        listRoom = roomDao.findAll();
        List<Room> listDouble = new ArrayList<>();
        for (Room data : listRoom) {
            if (data.getTypeId() == 2) {
                listDouble.add(data);
            }
        }
        loadTable(pnlDouble, listDouble);
    }//GEN-LAST:event_btnGetDoubleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListRoomEmptyJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListRoomEmptyJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListRoomEmptyJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListRoomEmptyJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListRoomEmptyJDialog dialog = new ListRoomEmptyJDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetAll;
    private javax.swing.JButton btnGetDouble;
    private javax.swing.JButton btnGetSingle;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlAll;
    private javax.swing.JPanel pnlDouble;
    private javax.swing.JPanel pnlShowRoom;
    private javax.swing.JPanel pnlSingle;
    // End of variables declaration//GEN-END:variables
}
