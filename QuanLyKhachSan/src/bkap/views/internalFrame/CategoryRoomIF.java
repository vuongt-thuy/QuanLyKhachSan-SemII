/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bkap.views.internalFrame;

import bkap.dao.impl.CategoryRoomDAO;
import bkap.dao.impl.RoomDAO;
import bkap.model.CategoryRoom;
import bkap.model.Room;
import bkap.utils.Helper;
import bkap.utils.SystemConstant;
import bkap.utils.Utils;
import bkap.views.LoginDialog;
import java.awt.Color;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hongb
 */
public class CategoryRoomIF extends javax.swing.JInternalFrame {

    private List<CategoryRoom> listCategoryRoom;
    private List<Room> listRoom;

    private CategoryRoomDAO catRoomDAO = new CategoryRoomDAO();
    private RoomDAO roomDAO = new RoomDAO();

    private DefaultTableModel modelCategoryRoom;

    private int indexSelected = 0;
    private int catRoomId = 0;

    Locale localeVN = new Locale("vi", "VN");
    NumberFormat vn = NumberFormat.getInstance(localeVN);

    /**
     * Creates new form CategoryRoomIF
     */
    public CategoryRoomIF() {
        Utils.setIconIF(this, Helper.getResources("tCategoryRoom"));
        initComponents();

        listCategoryRoom = catRoomDAO.findAll();
        listRoom = roomDAO.findAll();

        modelCategoryRoom = (DefaultTableModel) tblCategoryRoom.getModel();

        setDataTable(listCategoryRoom);
        
        if (LoginDialog.levelUser == SystemConstant.LEVEL_USER) {
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
        }
        setNameLabelAndButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbNameCategoryRoom = new javax.swing.JLabel();
        txtCategoryRoomName = new javax.swing.JTextField();
        lbRoomPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategoryRoom = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        msgInformation = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Loại phòng");

        lbNameCategoryRoom.setText("Tên loại phòng");

        lbRoomPrice.setText("Giá phòng");

        tblCategoryRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại phòng", "Giá phòng"
            }
        ));
        tblCategoryRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoryRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCategoryRoom);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_add_20px.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_edit_20px.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_remove_20px.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        msgInformation.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkap/images/icon/icons8_refresh_20px.png"))); // NOI18N
        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(msgInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNameCategoryRoom)
                            .addComponent(lbRoomPrice))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCategoryRoomName)
                            .addComponent(txtPrice)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNameCategoryRoom)
                    .addComponent(txtCategoryRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRoomPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(msgInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCategoryRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoryRoomMouseClicked
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);

        int indexSelected = tblCategoryRoom.getSelectedRow();

        CategoryRoom c = listCategoryRoom.get(indexSelected);
        catRoomId = c.getId();
        txtCategoryRoomName.setText(c.getName());
        txtPrice.setText((int) c.getPrice() + "");
    }//GEN-LAST:event_tblCategoryRoomMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String categoryRoomName = txtCategoryRoomName.getText();
        String roomPrice = txtPrice.getText();

        if (categoryRoomName.isEmpty()) {
            setMessageInformation("Vui lòng nhập tên loại phòng!", false);
        } else if (roomPrice.isEmpty()) {
            setMessageInformation("Vui lòng nhập giá phòng!", false);
        } else if (!roomPrice.isEmpty() && !roomPrice.matches("^[0-9]+$")) {
            setMessageInformation("Vui lòng nhập giá là số!", false);
        } else {
            CategoryRoom c = new CategoryRoom();
            c.setName(categoryRoomName);
            c.setPrice(Float.parseFloat(roomPrice));

            catRoomDAO.add(c);
            setNullFields();
            setMessageInformation(SystemConstant.MSG_SUCCESSFUL_UPDATE, true);

            listCategoryRoom = catRoomDAO.findAll();
            setDataTable(listCategoryRoom);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int reply = JOptionPane.showConfirmDialog(rootPane, SystemConstant.CONFIRM_DELETE);

        if (reply == 0) {
            indexSelected = tblCategoryRoom.getSelectedRow();

            if (indexSelected == -1) {
                setMessageInformation(SystemConstant.MSG_ERROR_CHOOSE_ROW_TABLE, false);
            } else {
                boolean check = true;
                
                for (Room r : listRoom) {
                    for (CategoryRoom l : listCategoryRoom) {
                        if (r.getTypeId() == l.getId()) {
                            setMessageInformation("Bạn không thể xóa loại phòng này!", false);
                            check = false;
                        }
                    }
                }

                if (check) {
                    catRoomDAO.delete(catRoomId);
                    setNullFields();
                    setMessageInformation(SystemConstant.MSG_SUCCESSFUL_UPDATE, true);
                    listCategoryRoom = catRoomDAO.findAll();
                    setDataTable(listCategoryRoom);
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int reply = JOptionPane.showConfirmDialog(rootPane, SystemConstant.CONFIRM_UPDATE);

        if (reply == 0) {
            indexSelected = tblCategoryRoom.getSelectedRow();

            if (indexSelected == -1) {
                setMessageInformation(SystemConstant.MSG_ERROR_CHOOSE_ROW_TABLE, false);
            } else {
                CategoryRoom c = new CategoryRoom();
                c.setId(catRoomId);
                c.setName(txtCategoryRoomName.getText());
                c.setPrice(Float.parseFloat(txtPrice.getText()));

                catRoomDAO.edit(c);
                setNullFields();
                setMessageInformation(SystemConstant.MSG_SUCCESSFUL_UPDATE, true);
                listCategoryRoom = catRoomDAO.findAll();
                setDataTable(listCategoryRoom);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        setNullFields();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void setMessageInformation(String msg, Boolean status) {
        if (status == false) {
            msgInformation.setForeground(Color.RED);
            msgInformation.setText(msg);
        } else {
            msgInformation.setForeground(Color.BLUE);
            msgInformation.setText(msg);
        }
    }

    private void setNullFields() {
        btnAdd.setEnabled(true);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);

        txtCategoryRoomName.setText("");
        txtPrice.setText("");
    }

    private void setDataTable(List<CategoryRoom> list) {
        modelCategoryRoom.setRowCount(0);
        for (CategoryRoom c : list) {
            modelCategoryRoom.addRow(new Object[]{
                c.getName(), vn.format(c.getPrice())
            });
        }
    }

    private void setNameLabelAndButton() {
        lbNameCategoryRoom.setText(Helper.getResources("nameCategoryRoom"));
        lbRoomPrice.setText(Helper.getResources("priceRoom"));
        
        btnAdd.setText(Helper.getResources("add"));
        btnDelete.setText(Helper.getResources("delete"));
        btnRefresh.setText(Helper.getResources("refresh"));
        btnUpdate.setText(Helper.getResources("update")); 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbNameCategoryRoom;
    private javax.swing.JLabel lbRoomPrice;
    private javax.swing.JLabel msgInformation;
    private javax.swing.JTable tblCategoryRoom;
    private javax.swing.JTextField txtCategoryRoomName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
